#- name: Verify if oh-my-zsh Is Installed
#  stat:
#    path: "~/.oh-my-zsh/oh-my-zsh.sh"
#  register: "omz_installed"
#
#- name: Install oh-my-zsh
#  shell: sh -c "$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)" "" --unattended
#
#  when: not omz_installed.stat.exists
#
#- name: Initialize oh-my-zsh
#  lineinfile:
#    dest: ~/.zshrc
#    regexp: 'oh-my-zsh.sh'
#    line: 'source $ZSH/oh-my-zsh.sh'
#    state: present
#
#- name: Install Powerlevel10k Theme
#  git:
#    repo: https://github.com/romkatv/powerlevel10k.git
#    dest: ~/.oh-my-zsh/custom/themes/powerlevel10k
#
#- name: Install zsh-autosuggestions
#  git:
#    repo: https://github.com/zsh-users/zsh-autosuggestions
#    dest: ~/.oh-my-zsh/custom/plugins/zsh-autosuggestions
#
#- name: Install zsh-syntax-highlighting
#  git:
#    repo: https://github.com/zsh-users/zsh-syntax-highlighting.git
#    dest: ~/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting
#
#- name: Install zsh-completions
#  git:
#    repo: https://github.com/zsh-users/zsh-completions
#    dest: ~/.oh-my-zsh/custom/plugins/zsh-completions
#
#- name: Set Plugins
#  lineinfile:
#    dest: ~/.zshrc
#    regexp: '^plugins'
#    line: 'plugins=(git aws gradle docker zsh-autosuggestions zsh-completions dotenv osx zsh-syntax-highlighting)'
#    state: present
#
#- name: Enable tty_tickets
#  lineinfile:
#    dest: /etc/sudoers
#    state: present
#    line: "Defaults tty_tickets"
#    validate: "visudo -cf %s"
#  become: yes
#
#- name: Update zsh Daily
#  lineinfile:
#    dest: ~/.zshrc
#    regexp: 'UPDATE_ZSH_DAYS'
#    line: 'export UPDATE_ZSH_DAYS=1'
#    state: present

- name: Enforce OSX-specific Key Bindings
  lineinfile:
    dest: ~/.zshrc
    regexp: "{{ item.value }}"
    line: "bindkey \"{{ item.key }}\" {{ item.value }}"
    state: present
  with_items:
    - { key: '^[a', value: 'beginning-of-line' }
    - { key: '^[e', value: 'end-of-line' }
    - { key: '\e[A', value: 'history-search-backward' }
    - { key: '\e[B', value: 'history-search-forward' }

- name: Configure SDKMAN
  include: sdkman-config.yml

- name: Install fzf
  include: fzf.yml

- name: Verify if iTerm Runs at Login
  command: osascript -e 'tell application "System Events" to get the name of every login item'
  register: login_items
  changed_when: false
  ignore_errors: true

- name: Run iTerm At Login
  command: osascript -e 'tell application "System Events" to make login item at end with properties {path:"/Applications/iTerm.app", hidden:true}'
  when: "'iTerm' not in login_items.stdout"
  ignore_errors: true
  become: true

- name: hide iTerm from Dock
  osx_defaults: domain=com.googlecode.iterm2 key=HideFromDockAndAppSwitcher type=bool value=true
  tags:
    - iterm
  notify:
    - Kill iTerm
    - Start iTerm

- name: Create ~/Library/Application Support/iTerm2/DynamicProfiles Directory
  file:
    state: directory
    path: "~/Library/Application Support/iTerm2/DynamicProfiles"
  tags: dotfiles

- name: Set iterm2 profile
  file:
    src: "~/dotfiles/iterm2/Profiles.json"
    dest: "~/Library/Application Support/iTerm2/DynamicProfiles/Profiles.json"
    state: link
  tags: dotfiles

- name: Use Touch ID for sudo
  tags: sudo
  lineinfile:
    dest: /etc/pam.d/sudo
    insertafter: '^# sudo: auth account password session'
    line: "auth       sufficient     pam_tid.so"
  become: true

- name: Install SpaceVim
  shell: curl -sLf https://spacevim.org/install.sh | bash -
  args:
    warn: no
  tags:
    - vim
    - terminal
